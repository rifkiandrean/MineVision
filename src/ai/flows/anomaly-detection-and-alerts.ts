'use server';

/**
 * @fileOverview An anomaly detection and alerts AI agent.
 *
 * - anomalyDetectionAndAlerts - A function that handles the anomaly detection and alerts process.
 * - AnomalyDetectionAndAlertsInput - The input type for the anomalyDetectionAndAlerts function.
 * - AnomalyDetectionAndAlertsOutput - The return type for the anomalyDetectionAndAlerts function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnomalyDetectionAndAlertsInputSchema = z.object({
  k3lData: z.string().describe('Real-time K3L (Kesehatan, Keselamatan Kerja & Lingkungan) data.'),
  equipmentReports: z.string().describe('Equipment reports, including status and performance metrics.'),
  productionMetrics: z.string().describe('Production metrics, such as output volume and efficiency.'),
  environmentalFactors: z.string().describe('Environmental factors, such as weather conditions and air quality.'),
});
export type AnomalyDetectionAndAlertsInput = z.infer<typeof AnomalyDetectionAndAlertsInputSchema>;

const AnomalyDetectionAndAlertsOutputSchema = z.object({
  potentialIncidents: z.array(z.string()).describe('A list of potential safety incidents identified by the AI.'),
  equipmentFailures: z.array(z.string()).describe('A list of potential equipment failures identified by the AI.'),
  productionShortfalls: z.array(z.string()).describe('A list of potential production shortfalls identified by the AI.'),
  alerts: z.array(z.string()).describe('A list of alerts generated by the AI, summarizing the potential issues.'),
});
export type AnomalyDetectionAndAlertsOutput = z.infer<typeof AnomalyDetectionAndAlertsOutputSchema>;

export async function anomalyDetectionAndAlerts(
  input: AnomalyDetectionAndAlertsInput
): Promise<AnomalyDetectionAndAlertsOutput> {
  return anomalyDetectionAndAlertsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'anomalyDetectionAndAlertsPrompt',
  input: {schema: AnomalyDetectionAndAlertsInputSchema},
  output: {schema: AnomalyDetectionAndAlertsOutputSchema},
  prompt: `You are an AI safety analyst specializing in identifying potential safety incidents, equipment failures, and production shortfalls in mining operations.

You will analyze real-time K3L data, equipment reports, production metrics, and environmental factors to proactively identify potential issues and generate alerts.

K3L Data: {{{k3lData}}}
Equipment Reports: {{{equipmentReports}}}
Production Metrics: {{{productionMetrics}}}
Environmental Factors: {{{environmentalFactors}}}

Based on this information, identify any potential safety incidents, equipment failures, and production shortfalls. Generate alerts summarizing the potential issues.

Format your response as a JSON object with the following keys:
- potentialIncidents: A list of potential safety incidents identified by the AI.
- equipmentFailures: A list of potential equipment failures identified by the AI.
- productionShortfalls: A list of potential production shortfalls identified by the AI.
- alerts: A list of alerts generated by the AI, summarizing the potential issues.
`,
});

const anomalyDetectionAndAlertsFlow = ai.defineFlow(
  {
    name: 'anomalyDetectionAndAlertsFlow',
    inputSchema: AnomalyDetectionAndAlertsInputSchema,
    outputSchema: AnomalyDetectionAndAlertsOutputSchema,
  },
  async input => {
    const {output} = await
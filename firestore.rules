/**
 * @fileoverview Firestore Security Rules for the MineVision application.
 *
 * Core Philosophy:
 * This ruleset provides public read access to most collections, reflecting a design for primarily read-only access by various users. Write access is generally denied unless explicitly specified.
 *
 * Data Structure:
 * The database consists of top-level collections for each department (e.g., `produksi`, `geologi`) and collections to support the main dashboard (`kpi`, `announcements`, `productionStatus`) and payment requests (`paymentRequests`).
 *
 * Key Security Decisions:
 * - All department collections (`produksi`, `geologi`, `pengolahan`, `k3l`, `keuangan`, `sdm`, `it`) are publicly readable. Writes are denied.
 * - The `paymentRequests` collection, which handles sensitive financial actions, is NOT publicly readable. Writes are also denied, requiring future rules to allow specific roles to create, update, or delete requests.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read KPI data, but restricts all write operations.
     * @path /kpi/{kpiId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /kpi/{kpiId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read announcement data, but restricts all write operations.
     * @path /announcements/{announcementId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /announcements/{announcementId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read production status data, but restricts all write operations.
     * @path /productionStatus/{statusId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /productionStatus/{statusId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Restricts all access to payment requests until specific authorization rules are defined.
     * @path /paymentRequests/{requestId}
     * @deny get, list: if false;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Secure by default: Denies all access to sensitive financial data until proper roles and rules are established.
     */
    match /paymentRequests/{requestId} {
      allow get, list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read produksi department data, but restricts all write operations.
     * @path /produksi/{produksiId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /produksi/{produksiId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read geologi department data, but restricts all write operations.
     * @path /geologi/{geologiId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /geologi/{geologiId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read pengolahan department data, but restricts all write operations.
     * @path /pengolahan/{pengolahanId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /pengolahan/{pengolahanId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read K3L department data, but restricts all write operations.
     * @path /k3l/{k3lId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /k3l/{k3lId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read keuangan department data, but restricts all write operations.
     * @path /keuangan/{keuanganId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /keuangan/{keuanganId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read SDM department data, but restricts all write operations.
     * @path /sdm/{sdmId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /sdm/{sdmId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read IT department data, but restricts all write operations.
     * @path /it/{itId}
     * @allow get, list: if true;
     * @deny create: if false;
     * @deny update: if false;
     * @deny delete: if false;
     * @principle Grants public read access and denies all write access.
     */
    match /it/{itId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}
/**
 * @fileoverview Firestore Security Rules for MineVision application.
 *
 * Core Philosophy:
 * This ruleset provides open read access for all collections to allow for the read-only access that is required.
 * All write operations are denied to maintain a read-only state.
 *
 * Data Structure:
 * The Firestore database is structured with top-level collections representing different departments (e.g., `produksi`, `geologi`).
 * Additional top-level collections store data for the main dashboard (`kpi`, `announcements`, `productionStatus`) and payment requests (`paymentRequests`).
 *
 * Key Security Decisions:
 * - All read operations are permitted for authenticated and unauthenticated users.
 * - All write operations are denied.
 *
 * Structural Segregation:
 * The database uses structural segregation to organize data by department, each with its own top-level collection.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read KPIs. Writes are forbidden.
     * @path /kpi/{kpiId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /kpi/{kpiId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read announcements. Writes are forbidden.
     * @path /announcements/{announcementId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /announcements/{announcementId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read production statuses. Writes are forbidden.
     * @path /productionStatus/{statusId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /productionStatus/{statusId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read payment requests. Writes are forbidden.
     * @path /paymentRequests/{requestId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /paymentRequests/{requestId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

      /**
       * @description Allows anyone to read budget data. Writes are forbidden.
       * @path /budgets/{budgetId}
       * @allow (get, list): if true;
       * @deny (create, update, delete): Always.
       * @principle Public read-only access.
       */
      match /budgets/{budgetId} {
        allow get, list: if true;
        allow create, update, delete: if false;
      }

    /**
     * @description Allows anyone to read produksi data. Writes are forbidden.
     * @path /produksi/{produksiId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /produksi/{produksiId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read geologi data. Writes are forbidden.
     * @path /geologi/{geologiId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /geologi/{geologiId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read pengolahan data. Writes are forbidden.
     * @path /pengolahan/{pengolahanId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /pengolahan/{pengolahanId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read k3l data. Writes are forbidden.
     * @path /k3l/{k3lId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /k3l/{k3lId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read keuangan data. Writes are forbidden.
     * @path /keuangan/{keuanganId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /keuangan/{keuanganId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read sdm data. Writes are forbidden.
     * @path /sdm/{sdmId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /sdm/{sdmId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read it data. Writes are forbidden.
     * @path /it/{itId}
     * @allow (get, list): if true;
     * @deny (create, update, delete): Always.
     * @principle Public read-only access.
     */
    match /it/{itId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}
/**
 * @fileOverview Firestore Security Rules for MineVision application.
 *
 * Core Philosophy:
 * This ruleset allows public read access to all data and denies all write access.
 *
 * Data Structure:
 * Data is organized into top-level collections, each representing a department
 * (e.g., /mineVisionDashboards/{mineVisionDashboardId}, /produksi/{produksiId}, etc.).
 *
 * Key Security Decisions:
 * - Public read access is granted to all collections.
 * - All write operations (create, update, delete) are explicitly denied to prevent unauthorized modifications.
 * - No data validation is performed (prototyping mode).
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to MineVision dashboard data and denies all write access.
     * @path /mineVisionDashboards/{mineVisionDashboardId}
     * @allow (get, list) Any user can read the dashboard data.
     * @deny (create, update, delete) No user can create, update, or delete the dashboard data.
     * @principle Allows public read access to dashboard data; denies all write access.
     */
    match /mineVisionDashboards/{mineVisionDashboardId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to produksi department data and denies all write access.
     * @path /produksi/{produksiId}
     * @allow (get, list) Any user can read the produksi data.
     * @deny (create, update, delete) No user can create, update, or delete the produksi data.
     * @principle Allows public read access to department data; denies all write access.
     */
    match /produksi/{produksiId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to geologi department data and denies all write access.
     * @path /geologi/{geologiId}
     * @allow (get, list) Any user can read the geologi data.
     * @deny (create, update, delete) No user can create, update, or delete the geologi data.
     * @principle Allows public read access to department data; denies all write access.
     */
    match /geologi/{geologiId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to pengolahan department data and denies all write access.
     * @path /pengolahan/{pengolahanId}
     * @allow (get, list) Any user can read the pengolahan data.
     * @deny (create, update, delete) No user can create, update, or delete the pengolahan data.
     * @principle Allows public read access to department data; denies all write access.
     */
    match /pengolahan/{pengolahanId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to k3l department data and denies all write access.
     * @path /k3l/{k3lId}
     * @allow (get, list) Any user can read the k3l data.
     * @deny (create, update, delete) No user can create, update, or delete the k3l data.
     * @principle Allows public read access to department data; denies all write access.
     */
    match /k3l/{k3lId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to keuangan department data and denies all write access.
     * @path /keuangan/{keuanganId}
     * @allow (get, list) Any user can read the keuangan data.
     * @deny (create, update, delete) No user can create, update, or delete the keuangan data.
     * @principle Allows public read access to department data; denies all write access.
     */
    match /keuangan/{keuanganId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to sdm department data and denies all write access.
     * @path /sdm/{sdmId}
     * @allow (get, list) Any user can read the sdm data.
     * @deny (create, update, delete) No user can create, update, or delete the sdm data.
     * @principle Allows public read access to department data; denies all write access.
     */
    match /sdm/{sdmId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to it department data and denies all write access.
     * @path /it/{itId}
     * @allow (get, list) Any user can read the it data.
     * @deny (create, update, delete) No user can create, update, or delete the it data.
     * @principle Allows public read access to department data; denies all write access.
     */
    match /it/{itId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}
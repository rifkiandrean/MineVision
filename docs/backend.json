
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user account in the system.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The unique identifier for the user, from Firebase Authentication."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "department": {
          "type": "string",
          "description": "The department or role of the user.",
          "enum": ["Super Admin", "Admin", "Manager", "Supervisor", "Staff"]
        }
      },
      "required": ["uid", "email", "department"]
    },
    "MineVisionDashboard": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MineVisionDashboard",
      "type": "object",
      "description": "Represents the main dashboard of the MineVision application, aggregating data from various departments.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the dashboard instance."
        },
        "operationSummary": {
          "type": "string",
          "description": "Summary of mining operations."
        },
        "k3lMetrics": {
          "type": "string",
          "description": "Key K3L (Kesehatan, Keselamatan Kerja & Lingkungan) metrics."
        },
        "productionStatus": {
          "type": "string",
          "description": "Real-time production status."
        },
        "announcements": {
          "type": "string",
          "description": "Important announcements related to the mining operation."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Timestamp of the last dashboard update.",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "Produksi": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Produksi",
      "type": "object",
      "description": "Represents the production department data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Production data."
        },
        "miningScheduleDetails": {
          "type": "string",
          "description": "Details of the mining schedule."
        },
        "heavyEquipmentReports": {
          "type": "string",
          "description": "Reports on heavy equipment."
        },
        "gpsLocationData": {
          "type": "string",
          "description": "GPS location data."
        },
        "fuelConsumptionStatus": {
          "type": "string",
          "description": "Fuel consumption status."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Timestamp of the last data update.",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "Geologi": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Geologi",
      "type": "object",
      "description": "Represents the geology department data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Geology data."
        },
        "reserveMaps": {
          "type": "string",
          "description": "Maps of reserves."
        },
        "drillingResultsData": {
          "type": "string",
          "description": "Drilling results data (logs, assays)."
        },
        "resourceReserveReports": {
          "type": "string",
          "description": "Reports on resource reserves."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Timestamp of the last data update.",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "Pengolahan": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Pengolahan",
      "type": "object",
      "description": "Represents the pengolahan (processing) department data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Pengolahan data."
        },
        "crusherPlantStatus": {
          "type": "string",
          "description": "Status of the crusher/plant."
        },
        "productQualityData": {
          "type": "string",
          "description": "Product quality data (kalori, moisture)."
        },
        "equipmentPerformanceReports": {
          "type": "string",
          "description": "Equipment performance reports."
        },
        "lastUpdated": {
          "type": "string",
"description": "Timestamp of the last data update.",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "K3L": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "K3L",
      "type": "object",
      "description": "Represents the K3L (Kesehatan, Keselamatan Kerja & Lingkungan) department data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the K3L data."
        },
        "incidentAccidentDashboard": {
          "type": "string",
          "description": "Dashboard of incidents/accidents."
        },
        "hazardReportForms": {
          "type": "string",
          "description": "Hazard report forms."
        },
        "environmentalComplianceAuditChecklist": {
          "type": "string",
          "description": "Environmental compliance audit checklist."
        },
        "k3TrainingStatus": {
          "type": "string",
          "description": "K3 training status."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Timestamp of the last data update.",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "Keuangan": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Keuangan",
      "type": "object",
      "description": "Represents the keuangan (finance) department data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Keuangan data."
        },
        "budgetReports": {
          "type": "string",
          "description": "Budget reports."
        },
        "operationalExpenses": {
          "type": "string",
          "description": "Operational expenses."
        },
        "contractorPaymentStatus": {
          "type": "string",
          "description": "Contractor payment status."
        },
        "salesDashboard": {
          "type": "string",
          "description": "Sales dashboard."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Timestamp of the last data update.",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "SDM": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SDM",
      "type": "object",
      "description": "Represents the SDM (Sumber Daya Manusia, HRD) department data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the SDM data."
        },
        "employeeDatabase": {
          "type": "string",
          "description": "Employee database."
        },
        "leaveManagement": {
          "type": "string",
          "description": "Leave management."
        },
        "digitalAttendance": {
          "type": "string",
          "description": "Digital attendance."
        },
        "trainingSchedules": {
          "type": "string",
          "description": "Training schedules."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Timestamp of the last data update.",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "IT": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "IT",
      "type": "object",
      "description": "Represents the IT department data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the IT data."
        },
        "itAssetInventory": {
          "type": "string",
          "description": "IT asset inventory."
        },
        "helpdeskTickets": {
          "type": "string",
          "description": "Helpdesk tickets."
        },
        "networkStatus": {
          "type": "string",
          "description": "Network status."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Timestamp of the last data update.",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "KPI": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "KPI",
      "type": "object",
      "description": "Represents a Key Performance Indicator for the dashboard.",
      "properties": {
        "title": { "type": "string" },
        "value": { "type": "string" },
        "change": { "type": "string" },
        "changeType": { "type": "string", "enum": ["positive", "negative"] }
      }
    },
    "Announcement": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Announcement",
      "type": "object",
      "description": "Represents an announcement on the dashboard.",
      "properties": {
        "title": { "type": "string" },
        "date": { "type": "string", "format": "date-time" },
        "department": { "type": "string" },
        "priority": { "type": "string", "enum": ["High", "Medium", "Low"] }
      }
    },
    "ProductionStatus": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ProductionStatus",
      "type": "object",
      "description": "Represents the real-time status of a production area.",
      "properties": {
        "name": { "type": "string" },
        "status": { "type": "string", "enum": ["Optimal", "Warning", "Halted"] }
      }
    },
    "PaymentRequest": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PaymentRequest",
      "type": "object",
      "description": "Represents a payment request requiring approval.",
      "properties": {
        "requestor": {
          "type": "string",
          "description": "The person or department making the request."
        },
        "amount": {
          "type": "number",
          "description": "The amount of money requested."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the payment reason."
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date the request was submitted."
        },
        "status": {
          "type": "string",
          "enum": ["pending", "approved", "rejected"],
          "description": "The current status of the request."
        }
      },
      "required": ["requestor", "amount", "description", "date", "status"]
    },
    "Budget": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Budget",
      "type": "object",
      "description": "Represents budget and expense data for a specific category.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The expense category (e.g., Operational, Heavy Equipment, Fuel)."
        },
        "budgeted": {
          "type": "number",
          "description": "The budgeted amount for this category."
        },
        "actual": {
          "type": "number",
          "description": "The actual amount spent for this category."
        }
      },
      "required": ["category", "budgeted", "actual"]
    },
    "LeaveRequest": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LeaveRequest",
      "type": "object",
      "description": "Represents a leave request from an employee.",
      "properties": {
        "employeeName": {
          "type": "string",
          "description": "Name of the employee requesting leave."
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "Start date of the leave."
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "End date of the leave."
        },
        "reason": {
          "type": "string",
          "description": "Reason for the leave request."
        },
        "requestDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the request was submitted."
        },
        "status": {
          "type": "string",
          "enum": ["pending", "approved", "rejected"],
          "description": "The current status of the leave request."
        }
      },
      "required": ["employeeName", "startDate", "endDate", "reason", "requestDate", "status"]
    },
    "UserPermissions": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UserPermissions",
        "type": "object",
        "description": "Stores application permissions for a specific user.",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The unique ID of the user."
          },
          "permissions": {
            "type": "object",
            "description": "A map of permission keys to boolean values.",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "required": ["userId", "permissions"]
    },
    "HelpdeskTicket": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "HelpdeskTicket",
      "type": "object",
      "description": "Represents a helpdesk ticket submitted by a user.",
      "properties": {
        "ticketId": {
          "type": "string",
          "description": "A user-friendly, sequential ticket ID."
        },
        "subject": {
          "type": "string",
          "description": "The subject or title of the ticket."
        },
        "priority": {
          "type": "string",
          "enum": ["Low", "Medium", "High"],
          "description": "The priority level of the ticket."
        },
        "status": {
          "type": "string",
          "enum": ["Open", "In Progress", "Closed"],
          "description": "The current status of the ticket."
        },
        "userId": {
          "type": "string",
          "description": "The UID of the user who submitted the ticket."
        },
        "userEmail": {
          "type": "string",
          "format": "email",
          "description": "The email of the user who submitted the ticket."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the ticket was created."
        }
      },
      "required": ["ticketId", "subject", "priority", "status", "userId", "userEmail", "createdAt"]
    },
    "InventoryItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "InventoryItem",
      "type": "object",
      "description": "Represents an item in the supply chain inventory.",
      "properties": {
        "name": { "type": "string", "description": "Name of the inventory item." },
        "category": { "type": "string", "enum": ["Bahan Peledak", "Suku Cadang", "Bahan Bakar", "Lainnya"], "description": "Category of the item." },
        "stock": { "type": "number", "description": "Current stock quantity." },
        "unit": { "type": "string", "description": "Unit of measurement (e.g., Kg, Pcs, Liter)." },
        "location": { "type": "string", "description": "Storage location of the item." }
      },
      "required": ["name", "category", "stock", "unit"]
    },
    "PurchaseRequestSC": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PurchaseRequestSC",
      "type": "object",
      "description": "Represents a purchase request in the supply chain.",
      "properties": {
        "prId": { "type": "string", "description": "Unique ID for the purchase request." },
        "item": { "type": "string", "description": "Item being requested." },
        "quantity": { "type": "number", "description": "Quantity requested." },
        "department": { "type": "string", "description": "Requesting department." },
        "requestDate": { "type": "string", "format": "date-time", "description": "Date of the request." },
        "status": { "type": "string", "enum": ["Pending", "Approved", "Ordered", "Received"], "description": "Status of the request." }
      },
      "required": ["prId", "item", "quantity", "requestDate", "status"]
    },
    "Shipment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Shipment",
      "type": "object",
      "description": "Represents a material shipment.",
      "properties": {
        "shipmentId": { "type": "string", "description": "Unique ID for the shipment." },
        "vesselName": { "type": "string", "description": "Name of the vessel." },
        "cargoType": { "type": "string", "description": "Type of cargo being shipped." },
        "quantity": { "type": "number", "description": "Quantity of cargo in metric tons." },
        "destinationPort": { "type": "string", "description": "Destination port." },
        "status": { "type": "string", "enum": ["Scheduled", "Loading", "In Transit", "Discharged"], "description": "Current status of the shipment." }
      },
      "required": ["shipmentId", "vesselName", "quantity", "status"]
    },
    "Asset": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Asset",
      "type": "object",
      "description": "Represents a company asset, typically heavy equipment.",
      "properties": {
        "assetId": { "type": "string", "description": "Unique identifier for the asset." },
        "name": { "type": "string", "description": "Name or model of the asset." },
        "type": { "type": "string", "description": "Type or category of the asset." },
        "location": { "type": "string", "description": "Current location of the asset." },
        "status": { "type": "string", "enum": ["Operasional", "Perawatan", "Siaga", "Rusak"], "description": "Current operational status." },
        "purchaseDate": { "type": "string", "format": "date", "description": "Date the asset was purchased." },
        "initialCost": { "type": "number", "description": "The original purchase cost of the asset." }
      },
      "required": ["assetId", "name", "type", "status"]
    },
    "MaintenanceTask": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MaintenanceTask",
      "type": "object",
      "description": "Represents a maintenance task, either preventive or corrective.",
      "properties": {
        "taskId": { "type": "string", "description": "Unique identifier for the maintenance task." },
        "assetId": { "type": "string", "description": "ID of the asset being maintained." },
        "type": { "type": "string", "enum": ["Preventive", "Corrective"], "description": "The type of maintenance." },
        "description": { "type": "string", "description": "Description of the task or issue." },
        "status": { "type": "string", "enum": ["Terjadwal", "Dalam Pengerjaan", "Selesai", "Ditunda"], "description": "Current status of the task." },
        "scheduledDate": { "type": "string", "format": "date-time", "description": "The scheduled date for the task (for preventive)." },
        "completionDate": { "type": "string", "format": "date-time", "description": "The date the task was completed." },
        "downtimeHours": { "type": "number", "description": "Total hours the asset was down for this task." }
      },
      "required": ["taskId", "assetId", "type", "description", "status"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
            "entityName": "User",
            "schema": { "$ref": "#/backend/entities/User" },
            "description": "Stores user account information, including their role/department."
        }
      },
      {
        "path": "/kpi/{kpiId}",
        "definition": {
          "entityName": "KPI",
          "schema": { "$ref": "#/backend/entities/KPI" },
          "description": "Stores KPI data for the main dashboard."
        }
      },
      {
        "path": "/announcements/{announcementId}",
        "definition": {
          "entityName": "Announcement",
          "schema": { "$ref": "#/backend/entities/Announcement" },
          "description": "Stores announcement data for the main dashboard."
        }
      },
      {
        "path": "/productionStatus/{statusId}",
        "definition": {
          "entityName": "ProductionStatus",
          "schema": { "$ref": "#/backend/entities/ProductionStatus" },
          "description": "Stores production status data for the main dashboard."
        }
      },
      {
        "path": "/paymentRequests/{requestId}",
        "definition": {
          "entityName": "PaymentRequest",
          "schema": { "$ref": "#/backend/entities/PaymentRequest" },
          "description": "Stores all payment approval requests."
        }
      },
      {
        "path": "/budgets/{budgetId}",
        "definition": {
            "entityName": "Budget",
            "schema": { "$ref": "#/backend/entities/Budget" },
            "description": "Stores budget vs actual spending data."
        }
      },
      {
        "path": "/leaveRequests/{requestId}",
        "definition": {
          "entityName": "LeaveRequest",
          "schema": { "$ref": "#/backend/entities/LeaveRequest" },
          "description": "Stores all employee leave requests."
        }
      },
      {
        "path": "/userPermissions/{userId}",
        "definition": {
          "entityName": "UserPermissions",
          "schema": { "$ref": "#/backend/entities/UserPermissions" },
          "description": "Stores permissions for each user."
        }
      },
      {
        "path": "/helpdeskTickets/{ticketId}",
        "definition": {
          "entityName": "HelpdeskTicket",
          "schema": { "$ref": "#/backend/entities/HelpdeskTicket" },
          "description": "Stores all helpdesk support tickets."
        }
      },
      {
        "path": "/inventory/{itemId}",
        "definition": {
          "entityName": "InventoryItem",
          "schema": { "$ref": "#/backend/entities/InventoryItem" },
          "description": "Stores supply chain inventory items."
        }
      },
      {
        "path": "/purchaseRequestsSC/{prId}",
        "definition": {
          "entityName": "PurchaseRequestSC",
          "schema": { "$ref": "#/backend/entities/PurchaseRequestSC" },
          "description": "Stores supply chain purchase requests."
        }
      },
      {
        "path": "/shipments/{shipmentId}",
        "definition": {
          "entityName": "Shipment",
          "schema": { "$ref": "#/backend/entities/Shipment" },
          "description": "Stores shipment and logistics data."
        }
      },
      {
        "path": "/assets/{assetId}",
        "definition": {
          "entityName": "Asset",
          "schema": { "$ref": "#/backend/entities/Asset" },
          "description": "Stores company asset information."
        }
      },
      {
        "path": "/maintenanceTasks/{taskId}",
        "definition": {
          "entityName": "MaintenanceTask",
          "schema": { "$ref": "#/backend/entities/MaintenanceTask" },
          "description": "Stores all maintenance tasks and history."
        }
      },
      {
        "path": "/produksi/{produksiId}",
        "definition": {
          "entityName": "Produksi",
          "schema": {
            "$ref": "#/backend/entities/Produksi"
          },
          "description": "Stores produksi department data. No authorization context required as the application is read-only.",
          "params": [
            {
              "name": "produksiId",
              "description": "The unique ID of the produksi document."
            }
          ]
        }
      },
      {
        "path": "/geologi/{geologiId}",
        "definition": {
          "entityName": "Geologi",
          "schema": {
            "$ref": "#/backend/entities/Geologi"
          },
          "description": "Stores geologi department data. No authorization context required as the application is read-only.",
          "params": [
            {
              "name": "geologiId",
              "description": "The unique ID of the geologi document."
            }
          ]
        }
      },
      {
        "path": "/pengolahan/{pengolahanId}",
        "definition": {
          "entityName": "Pengolahan",
          "schema": {
            "$ref": "#/backend/entities/Pengolahan"
          },
          "description": "Stores pengolahan department data. No authorization context required as the application is read-only.",
          "params": [
            {
              "name": "pengolahanId",
              "description": "The unique ID of the pengolahan document."
            }
          ]
        }
      },
      {
        "path": "/k3l/{k3lId}",
        "definition": {
          "entityName": "K3L",
          "schema": {
            "$ref": "#/backend/entities/K3L"
          },
          "description": "Stores K3L department data. No authorization context required as the application is read-only.",
          "params": [
            {
              "name": "k3lId",
              "description": "The unique ID of the K3L document."
            }
          ]
        }
      },
      {
        "path": "/keuangan/{keuanganId}",
        "definition": {
          "entityName": "Keuangan",
          "schema": {
            "$ref": "#/backend/entities/Keuangan"
          },
          "description": "Stores keuangan department data. No authorization context required as the application is read-only.",
          "params": [
            {
              "name": "keuanganId",
              "description": "The unique ID of the keuangan document."
            }
          ]
        }
      },
      {
        "path": "/sdm/{sdmId}",
        "definition": {
          "entityName": "SDM",
          "schema": {
            "$ref": "#/backend/entities/SDM"
          },
          "description": "Stores SDM department data. No authorization context required as the application is read-only.",
          "params": [
            {
              "name": "sdmId",
              "description": "The unique ID of the SDM document."
            }
          ]
        }
      },
      {
        "path": "/it/{itId}",
        "definition": {
          "entityName": "IT",
          "schema": {
            "$ref": "#/backend/entities/IT"
          },
          "description": "Stores IT department data. No authorization context required as the application is read-only.",
          "params": [
            {
              "name": "itId",
              "description": "The unique ID of the IT document."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to segregate data by department, reflecting the application's core feature of drill-down access to department-specific modules. This segregation strategy (Structural Segregation) allows for clear and maintainable security rules. Each department's data resides in its own top-level collection, such as `produksi`, `geologi`, `pengolahan`, `k3l`, `keuangan`, `sdm`, and `it`. For the main dashboard, new collections for `kpi`, `announcements`, and `productionStatus` are created to store their respective data dynamically. A new `paymentRequests` collection is added to manage the approval workflow for the finance department. A `budgets` collection is added to store budget vs actual data for the finance dashboard. A `leaveRequests` collection is added for the HR leave management system. A `userPermissions` collection is added to store user-specific permissions. A `helpdeskTickets` collection is added to store helpdesk support tickets. New collections `inventory`, `purchaseRequestsSC`, and `shipments` are added for the Supply Chain module. New collections `assets` and `maintenanceTasks` are added for the Asset & Maintenance module."
  }
}
